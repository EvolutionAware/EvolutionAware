import "../imports/DwyerPatterns.spectra"
spec CatchingIntruder
define D := 7;
type Dim = Int(0..D);

sys Dim robotX0;
sys Dim robotY0;
sys Dim robotX1;
sys Dim robotY1;


env Dim intruderX;
env Dim intruderY;

//module 3 intruder's failure attempts


predicate moveDist(Dim pos):
  pos+1 = next(pos) |
  pos   = next(pos) |
  pos-1 = next(pos);


predicate stay(Dim dim):
	next(dim) = dim;


asm alw !(intruderX = robotX0 and intruderY = robotY0);
asm alw !(intruderX = robotX1 and intruderY = robotY1);

predicate cellIsClear(Dim x, Dim y):
	!((robotX1) = x and (robotY1) = y)  and  !((robotX0) = x and (robotY0) = y) and !(x = 2 and y = 1) and !(x = 4 and y = 1)  and !(x = 3 and y = 1) and !(x = 5 and y = 1);
	

asm intruderMove:
	alw ((intruderY < 7 and cellIsClear(intruderX, intruderY + 1)) or (intruderY > 0 and cellIsClear(intruderX, intruderY - 1)) or (intruderX < 7 and cellIsClear(intruderX + 1, intruderY)) or (intruderX > 0 and cellIsClear(intruderX - 1, intruderY)));